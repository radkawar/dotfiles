#!/bin/bash

TAG="TYPE:AWS_ACCESS_KEY"
OUTPUT_FILE="$CHEZMOI_SOURCE_DIR/.chezmoidata/aws.yaml"

command -v op >/dev/null 2>&1 || { echo "Error: 1Password CLI (op) is required."; exit 1; }
command -v jq >/dev/null 2>&1 || { echo "Error: jq is required."; exit 1; }

op whoami >/dev/null 2>&1 || eval $(op signin)

# Initialize YAML output
cat <<EOF > "$OUTPUT_FILE"
# Generated by run_after_generate_aws_data.sh
aws_profiles:
EOF

items=$(op item list --tags "$TAG" --format json)

if [ -z "$items" ] || [ "$items" = "[]" ]; then
  echo "No items found with tag $TAG."
  # Still create an empty aws_profiles list
  echo "aws_profiles: []" > "$OUTPUT_FILE"
  exit 0
fi

# Process each item and append to YAML
echo "$items" | jq -c '.[]' | while read -r item; do
  title=$(echo "$item" | jq -r '.title')
  vault_name=$(echo "$item" | jq -r '.vault.name')
  profile_name=$(echo "$item" | jq -r --arg tag "$TAG" '.tags[] | select(startswith($tag + "/")) | sub($tag + "/"; "")')
  region=$(echo "$item" | jq -r '.tags[] | select(startswith("REGION:")) | sub("REGION:"; "")')

  if [ -z "$profile_name" ]; then
    echo "Skipping item '$title': No profile name found in tags beginning with '$TAG'."
    continue
  fi

  

  # Append YAML entry for this item
  if [ -n "$region" ]; then
    cat <<EOF >> "$OUTPUT_FILE"
  - item: $title
    name: $profile_name
    vault: $vault_name
    region: $region
EOF
  else
    cat <<EOF >> "$OUTPUT_FILE"
  - item: $title
    name: $profile_name
    vault: $vault_name
EOF
  fi
done
